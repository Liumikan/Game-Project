进度：实现bind方法
*bind的方法传进(this指向, 函数用到的参数)
返回 一个新的方法，如果

flappybird项目进度：
渲染背景完毕；
渲染鸟完成
鸟飞翔完成
鸟下降和点击上升完成
管子的渲染和移动以及清理完成
鸟的头部方向改变完成

碰撞检测：
鸟和管子的碰撞检测完成
优化：鸟和地面的检测完成
优化：游戏结束做成下坠效果


1、避免全局变量污染的两种方案：！！！

wondow.onload = function() {}
2、封装函数 参数1：保存图的数组 参数2： 回调函数――》加载完所有图片后执行回调函数

3、onload事件是异步的 for循环结束后才开始加载

4、forEach和for循环的区别：
forEach进行遍历时，遍历的数组是固定的 不可以进行修改和删除操作；
for循环适合在较复杂的循环中使用；

5、想要将图片加载到页面，需要使用onload事件
q：是否加载到页面才能使用?

6、总结初始化函数的问题

函数参数可以直接作为数组项创建数组？因为y值是随机的

window.g 如果没有定义则自动创建

需求分析：

管子的x值是canvas的宽？游戏开始时管子隐藏在canvas的最右侧

canvas的宽高定义：一张图w不够360
图片无限延长

pipe类不需要y定位值？

在定时器中减小元素的执行频率 



上下管子的碰撞分别检测

canvas：

splice方法

init方法：可以直接书写start中的开始游戏代码，但要注意执行顺序

drawImage方法的三种绘制图片的方式！！
Math.sqrt()开方

绑定事件方法定义在启动函数中，绑定事件全部可以放在该函数中

ABCD盒模型检测法
* 碰撞检测原理：
（1）先将要检测的几个对象绘制点描边，作为检测的基准；
（2）再将这些点的数据进行比对


项目问题：
1、渲染图片问题 注意将准确的图片传入，不然会导致类型错误
*typeError一般都是代码书写问题；
2、面向对象编程要注意：this指向问题，指向不正确很容易出现typeError

3、在定时器中降低事件频率的方法：
（1）定义一个frame frame++，用取余%对frame的值进行限制，降低事件频率

4、game类中最开始初始化一个pipe实例，只是为了创建存储管子的数组，一个实例可以先渲染，再forEach遍历创建多个管子

5、碰撞检测思路：
（撞到区域，管子侧面和管子口）――》
（根据点检测）――》（当鸟越过管子时，仍然满足条件）――》限制鸟的左边界x值小于管子右边界的x值；
（）